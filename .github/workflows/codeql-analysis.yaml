# THIS CODE WAS AUTOGENERATED. DO NOT MODIFY THIS FILE DIRECTLY
# THE SOURCE CODE LIVES IN A DIFFERENT REPOSITORY:
#   - centralized-templates
# FILE STEWARD: @pleo-io/security

name: CodeQL Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  languages:
    name: Get repository languages
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    outputs:
      lang: ${{ steps.repo-languages.outputs.lang }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Repo Languages
        id: repo-languages
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api repos/${{ github.repository }} > repo_metadata.json
          echo "lang=$(jq -r '.language' repo_metadata.json)" >> "$GITHUB_OUTPUT"

  analyze-java:
    name: Analyze Java or Kotlin
    needs:
      - languages
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    if: needs.languages.outputs.lang == 'Kotlin' || needs.languages.outputs.lang == 'Java'
    strategy:
      fail-fast: false
      matrix:
        language:
          - java
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up a JDK environment for building, testing and releasing.
      - name: Set up JDK 17.0.4
        uses: actions/setup-java@v3.10.0
        with:
          java-version: 17.0.4
          distribution: temurin

      # Allow caching Gradle executions to further speed up CI/CD steps invoking Gradle.
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2.3.3
        with:
          gradle-executable: ./gradlew
          gradle-version: wrapper
          gradle-home-cache-cleanup: true
          cache-read-only: true

      # Set up a Node environment for JS/TS/Node client generation.
      - name: Set up Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          ram: 4096

      - name: Gradle Build
        run: ./gradlew build -x test --stacktrace
        env:
          GITHUB_TOKEN: ${{ secrets.GH_REGISTRY_GRADLE_TOKEN }}
          GRADLE_READ_KEY: ${{ secrets.GH_REGISTRY_GRADLE_TOKEN }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          ram: 4096
          category: "/language:${{matrix.language}}"

  analyze-javascript:
    name: Analyze Javascript
    needs:
      - languages
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    if: needs.languages.outputs.lang == 'TypeScript' || needs.languages.outputs.lang == 'JavaScript'
    strategy:
      fail-fast: false
      matrix:
        language:
          - javascript
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up a Node environment for JS/TS/Node client generation.
      - name: Set up Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"

  analyze-python:
    name: Analyze Python
    needs:
      - languages
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    if: needs.languages.outputs.lang == 'Python'
    strategy:
      fail-fast: false
      matrix:
        language: ["python"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"

  analyze-go:
    name: Analyze Go
    needs:
      - languages
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    if: needs.languages.outputs.lang == 'Go'
    strategy:
      fail-fast: false
      matrix:
        language:
          - go
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
